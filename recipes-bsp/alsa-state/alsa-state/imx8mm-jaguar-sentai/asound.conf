# ===== Minimal ALSA config for AEC =====

# ---- Physical Speaker (used by pipeline as "spk") ----
pcm.spk {
    type hw
    card tas2563audio
    device 0
}
ctl.spk { type hw card tas2563audio}

pcm.spk_vc {
    type softvol
    slave.pcm "spk"
    control {
        name "Soft Speaker Volume"
        card tas2563audio
    }
    min_dB -60.0
    max_dB 0.0
    resolution 100
}

pcm.!default {
    type plug
    slave.pcm "spk_vc"
}

ctl.!default { type hw card tas2563audio}

# ---- Physical Microphone (auto-detects hardware variant) ----
# Primary microphone device - uses runtime detection to select source
pcm.mic {
    @func refer
    name {
        @func concat
        strings [
            "pcm."
            { @func getenv
              vars [ MIC_HW_TYPE ]
              default "micfil_mic"
            }
        ]
    }
}

ctl.mic {
    @func refer
    name {
        @func concat
        strings [
            "ctl."
            { @func getenv
              vars [ MIC_HW_TYPE ]
              default "micfil_mic"
            }
        ]
    }
}

# ---- Original Hardware: MICFIL PDM Microphones ----
pcm.micfil_mic {
    type hw
    card micfilaudio
    device 0
}
ctl.micfil_mic { type hw card micfilaudio }

# ---- Test Hardware: TAS2563 Integrated Microphones ----
pcm.tas2563_mic {
    type hw
    card tas2563audio
    device 0
    subdevice 1  # Capture subdevice for TAS2563 mics
}
ctl.tas2563_mic { type hw card tas2563audio }

# ---- TAS2563 SDout Capture Device ----
# Direct access to TAS2563 Serial Data Output for monitoring/feedback
pcm.tas2563_sdout {
    type hw
    card tas2563audio
    device 0
    # Use main capture device for SDout (full-duplex configuration)
}
ctl.tas2563_sdout { type hw card tas2563audio }

# ---- TAS2563 SDout with Volume Control ----
pcm.tas2563_sdout_vc {
    type softvol
    slave.pcm "tas2563_sdout"
    control {
        name "SDout Capture Volume"
        card tas2563audio
    }
    min_dB -60.0
    max_dB 20.0
    resolution 100
}

# ---- Loopback pair 0: Azure TTS -> AEC probe ----
pcm.loop_playback_far {  # write here from Azure TTS
    type hw
    card Loopback
    device 0
    subdevice 0
}
pcm.loop_capture_far {   # read here for webrtcechoprobe
    type hw
    card Loopback
    device 1
    subdevice 0
}

# ---- Loopback pair 1: AEC output -> consumers (e.g., STT) ----
pcm.loop_playback_near {  # AEC writes cleaned audio here
    type hw
    card Loopback
    device 0
    subdevice 1
}
pcm.loop_capture_near {   # single-open reader of cleaned audio
    type hw
    card Loopback
    device 1
    subdevice 1
}

# Optional multi-open reader of cleaned audio (use if multiple apps read it)
pcm.loop_capture_near_multi {
    type dsnoop
    ipc_key 673057
    ipc_perm 0666
    slave {
        pcm "hw:Loopback,1,1"
        format S16_LE
        rate 16000
        channels 1
    }
}
