#!/bin/bash

#
# Hardware Detection Script for Dual Audio Configuration
# Detects whether system has original PDM microphones or TAS2563 integrated microphones
# Sets environment variables for ALSA configuration selection
#

SCRIPT_NAME="detect-audio-hardware"
LOG_TAG="[$SCRIPT_NAME]"

# Configuration file for persistent settings
AUDIO_CONFIG_FILE="/etc/default/audio-hardware"

# Function to log messages
log_info() {
    echo "$LOG_TAG INFO: $1"
    logger -t "$SCRIPT_NAME" "INFO: $1"
}

log_error() {
    echo "$LOG_TAG ERROR: $1" >&2
    logger -t "$SCRIPT_NAME" "ERROR: $1"
}

# Function to detect hardware variant
detect_hardware_variant() {
    local hw_type=""
    local detection_method=""
    
    log_info "Detecting audio hardware variant..."
    
    # Method 1: Check for TAS2563 microphone capability
    if [ -f "/proc/device-tree/soc@0/bus@30800000/i2c@30a30000/tas2563@4c/ti,mic-mode" ]; then
        local mic_mode=$(cat /proc/device-tree/soc@0/bus@30800000/i2c@30a30000/tas2563@4c/ti,mic-mode 2>/dev/null)
        if [ "$mic_mode" = "$(printf '\x01')" ]; then  # mic-mode = 1 (enabled)
            hw_type="tas2563_mic"
            detection_method="Device tree mic-mode property"
        fi
    fi
    
    # Method 2: Check for runtime TAS2563 microphone configuration
    if [ -z "$hw_type" ]; then
        # Check if TAS2563 driver supports capture
        if arecord -l 2>/dev/null | grep -q "Audio.*capture"; then
            hw_type="tas2563_mic"
            detection_method="ALSA capture device detection"
        fi
    fi
    
    # Method 3: Try to detect TAS2563 capture capability
    if [ -z "$hw_type" ]; then
        # Test if TAS2563 has capture subdevice
        if timeout 2 arecord -D hw:Audio,0,1 -f S16_LE -r 16000 -c 2 -d 0.1 /dev/null 2>/dev/null; then
            hw_type="tas2563_mic"
            detection_method="TAS2563 capture test"
        fi
    fi
    
    # Method 4: Check MICFIL availability (original hardware)
    if [ -z "$hw_type" ]; then
        if [ -d "/proc/device-tree/soc@0/bus@30800000/micfil@30ca0000" ] && \
           cat /proc/asound/cards 2>/dev/null | grep -q "micfilaudio"; then
            hw_type="micfil_mic"
            detection_method="MICFIL device detection"
        fi
    fi
    
    # Method 5: Check for GPIO-based hardware detection (if implemented)
    # This would require a specific GPIO pin to be configured differently on each hardware variant
    if [ -z "$hw_type" ]; then
        # Example: Check a specific GPIO state that differs between hardware variants
        # if [ -f "/sys/class/gpio/gpio1/value" ]; then
        #     local gpio_value=$(cat /sys/class/gpio/gpio1/value 2>/dev/null)
        #     if [ "$gpio_value" = "1" ]; then
        #         hw_type="tas2563_mic"
        #         detection_method="GPIO hardware detection"
        #     fi
        # fi
        :  # Placeholder for GPIO detection
    fi
    
    # Default fallback to original hardware
    if [ -z "$hw_type" ]; then
        hw_type="micfil_mic"
        detection_method="Default fallback"
        log_info "No specific hardware detected, defaulting to original MICFIL configuration"
    fi
    
    log_info "Detected hardware type: $hw_type (method: $detection_method)"
    echo "$hw_type"
}

# Function to configure TAS2563 for microphone mode
configure_tas2563_mics() {
    log_info "Configuring TAS2563 for microphone input mode..."
    
    # Enable TAS2563 microphone mode via I2C (requires i2c-tools)
    if command -v i2cset >/dev/null 2>&1; then
        # This is a placeholder - actual register addresses depend on TAS2563 driver implementation
        # i2cset -y 1 0x4C 0x00 0x01  # Example: Enable mic mode
        log_info "TAS2563 I2C configuration would be applied here"
    else
        log_info "i2c-tools not available, skipping direct TAS2563 configuration"
    fi
    
    # Alternative: Use ALSA controls if available
    if command -v amixer >/dev/null 2>&1; then
        # Try to set TAS2563 microphone controls
        amixer -c Audio set "Mic Mode" on 2>/dev/null || true
        amixer -c Audio set "Mic Bias" on 2>/dev/null || true
        amixer -c Audio set "Mic Gain" 16 2>/dev/null || true
    fi
}

# Function to save configuration
save_config() {
    local hw_type="$1"
    local card_name=""
    
    case "$hw_type" in
        "tas2563_mic")
            card_name="Audio"
            ;;
        "micfil_mic")
            card_name="micfilaudio"
            ;;
        *)
            card_name="Audio"
            ;;
    esac
    
    log_info "Saving audio hardware configuration..."
    
    cat > "$AUDIO_CONFIG_FILE" << EOF
# Audio Hardware Configuration
# Generated by $SCRIPT_NAME on $(date)

# Hardware type: $hw_type
export MIC_HW_TYPE="$hw_type"
export MIC_CARD_NAME="$card_name"

# Additional configuration
export AUDIO_HW_VARIANT="$hw_type"
export SPEAKER_CARD="Audio"
EOF
    
    chmod 644 "$AUDIO_CONFIG_FILE"
    log_info "Configuration saved to $AUDIO_CONFIG_FILE"
}

# Function to apply configuration
apply_config() {
    local hw_type="$1"
    
    # Export environment variables for current session
    export MIC_HW_TYPE="$hw_type"
    case "$hw_type" in
        "tas2563_mic")
            export MIC_CARD_NAME="Audio"
            configure_tas2563_mics
            ;;
        "micfil_mic")
            export MIC_CARD_NAME="micfilaudio"
            ;;
    esac
    
    export AUDIO_HW_VARIANT="$hw_type"
    export SPEAKER_CARD="Audio"
    
    log_info "Applied configuration for hardware type: $hw_type"
}

# Main function
main() {
    local force_detect=false
    local specified_type=""
    
    # Parse command line arguments
    while [ $# -gt 0 ]; do
        case "$1" in
            --force|-f)
                force_detect=true
                shift
                ;;
            --type|-t)
                specified_type="$2"
                shift 2
                ;;
            --help|-h)
                echo "Usage: $0 [options]"
                echo "Options:"
                echo "  --force, -f          Force hardware detection"
                echo "  --type, -t TYPE      Specify hardware type (tas2563_mic|micfil_mic)"
                echo "  --help, -h           Show this help"
                exit 0
                ;;
            *)
                log_error "Unknown option: $1"
                exit 1
                ;;
        esac
    done
    
    # Check if configuration already exists and is valid
    if [ -f "$AUDIO_CONFIG_FILE" ] && [ "$force_detect" = false ] && [ -z "$specified_type" ]; then
        source "$AUDIO_CONFIG_FILE"
        if [ -n "$MIC_HW_TYPE" ]; then
            log_info "Using existing configuration: $MIC_HW_TYPE"
            apply_config "$MIC_HW_TYPE"
            exit 0
        fi
    fi
    
    # Detect or use specified hardware type
    local hw_type=""
    if [ -n "$specified_type" ]; then
        case "$specified_type" in
            "tas2563_mic"|"micfil_mic")
                hw_type="$specified_type"
                log_info "Using specified hardware type: $hw_type"
                ;;
            *)
                log_error "Invalid hardware type: $specified_type"
                exit 1
                ;;
        esac
    else
        hw_type=$(detect_hardware_variant)
    fi
    
    # Apply and save configuration
    apply_config "$hw_type"
    save_config "$hw_type"
    
    log_info "Audio hardware detection completed successfully"
}

# Run main function
main "$@"
